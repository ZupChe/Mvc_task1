<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutUs" xml:space="preserve">
    <value>About Us</value>
  </data>
  <data name="AboutUsDetails1" xml:space="preserve">
    <value>Car ads have been synonymous with advertising for 26 years and the first choice for buying and selling cars. Formerly the highest-circulation advertisement on the market, and now the site www.autooglasi.com with over 2,500,000 unique visitors per month, it is the largest purchase and exchange exchange in Serbia.</value>
  </data>
  <data name="AboutUsDetails2" xml:space="preserve">
    <value>Every day, about thirty employees work hard to make Auto Ads even better. From the very beginning, we carefully build the connection, listen to all objections and try to meet the wishes of our users in the most adequate way. Because of all this, millions of users have placed their trust in us and thus ensured a strong position as market leaders.</value>
  </data>
  <data name="AdContact" xml:space="preserve">
    <value>Contact:</value>
  </data>
  <data name="AddAd" xml:space="preserve">
    <value>You successfully add new car:</value>
  </data>
  <data name="AddButton" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AddCar" xml:space="preserve">
    <value>Add New Car</value>
  </data>
  <data name="AdDelete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="AdInfo" xml:space="preserve">
    <value>Ads:</value>
  </data>
  <data name="AdSales" xml:space="preserve">
    <value>Ad Sales Contact:</value>
  </data>
  <data name="AdUpdate" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="CarAds" xml:space="preserve">
    <value>Car Ads</value>
  </data>
  <data name="CarBody" xml:space="preserve">
    <value>Body:</value>
  </data>
  <data name="CarBodyRequred" xml:space="preserve">
    <value>Body is required</value>
  </data>
  <data name="CarDetails" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="CarDetailsRequired" xml:space="preserve">
    <value>Detais are required</value>
  </data>
  <data name="CarFuel" xml:space="preserve">
    <value>Fuel:</value>
  </data>
  <data name="CarInfo" xml:space="preserve">
    <value>Cars</value>
  </data>
  <data name="CarMark" xml:space="preserve">
    <value>Car Mark</value>
    <comment>Car</comment>
  </data>
  <data name="CarMarkRequired" xml:space="preserve">
    <value>Mark is required</value>
  </data>
  <data name="CarModel" xml:space="preserve">
    <value>Model</value>
  </data>
  <data name="CarModelRequired" xml:space="preserve">
    <value>Model is required</value>
  </data>
  <data name="CarPhoto" xml:space="preserve">
    <value>Photo</value>
  </data>
  <data name="CarPrice" xml:space="preserve">
    <value>Price:</value>
  </data>
  <data name="CarPriceRequired" xml:space="preserve">
    <value>Price is required</value>
  </data>
  <data name="CarYear" xml:space="preserve">
    <value>Year:</value>
  </data>
  <data name="CarYearRequired" xml:space="preserve">
    <value>Year is required</value>
  </data>
  <data name="ContactUs" xml:space="preserve">
    <value>Contact</value>
  </data>
  <data name="CopyrightLabel" xml:space="preserve">
    <value>All rights reserved.</value>
  </data>
  <data name="DeleteAd" xml:space="preserve">
    <value>You successfully delete car:</value>
  </data>
  <data name="EngineCapacity" xml:space="preserve">
    <value>Engine Capacity:</value>
  </data>
  <data name="EngineCapacityRequired" xml:space="preserve">
    <value>Engine Capacity is required</value>
  </data>
  <data name="FuelRequired" xml:space="preserve">
    <value>Fuel is required</value>
  </data>
  <data name="HelloLabel" xml:space="preserve">
    <value>Hello</value>
  </data>
  <data name="HomePage" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Horsepower" xml:space="preserve">
    <value>Horsepower:</value>
  </data>
  <data name="HorsepowerRequired" xml:space="preserve">
    <value>Horsepower is required</value>
  </data>
  <data name="LogInLabel" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LogOutLabel" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="MainHeading" xml:space="preserve">
    <value>Welcome to the website for car advertising </value>
  </data>
  <data name="NoAd" xml:space="preserve">
    <value>There are currently no ads entered. Add new!</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordPlaceholder" xml:space="preserve">
    <value>enter password...</value>
  </data>
  <data name="PasswordRequired" xml:space="preserve">
    <value>Password is required</value>
  </data>
  <data name="RegisterLabel" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="SalerContact" xml:space="preserve">
    <value>Contact</value>
  </data>
  <data name="SalerContactRequired" xml:space="preserve">
    <value>Contact is required</value>
  </data>
  <data name="SidebarHeading" xml:space="preserve">
    <value>Sidebar</value>
  </data>
  <data name="SidebarText" xml:space="preserve">
    <value>Quick links</value>
  </data>
  <data name="SingleAd" xml:space="preserve">
    <value>Ad:</value>
  </data>
  <data name="SuccessfulInsert" xml:space="preserve">
    <value>You successfully add new car:</value>
  </data>
  <data name="UpdateAd" xml:space="preserve">
    <value>You successfully update car:</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="UsernamePlaceholder" xml:space="preserve">
    <value>enter username...</value>
  </data>
  <data name="UsernameRequired" xml:space="preserve">
    <value>Username is required</value>
  </data>
</root>